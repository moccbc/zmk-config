/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>

/ {
    macros {
        dashboard: dashboard {
            compatible = "zmk,behavior-macro";
            label = "DASHBOARD";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LGUI>,
                <&macro_tap>,
                <&kp A>,
                <&macro_release>,
                <&kp LGUI>;
        };

        language: language {
            compatible = "zmk,behavior-macro";
            label = "LANGUAGE";
            #binding-cells = <0>;
            bindings = <&macro_tap>, <&kp LA(LC(SPACE))>;
        };

        alt_tab: alt_tab {
            compatible = "zmk,behavior-macro";
            label = "ALT_TAB";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LEFT_ALT>,
                <&macro_tap>,
                <&kp TAB>,
                <&macro_release>,
                <&kp LALT>;
        };

        screenshot: screenshot {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&kp LEFT_COMMAND &kp LEFT_SHIFT>,
                <&macro_wait_time 5>,
                <&kp NUMBER_4>;

            label = "SCREENSHOT";
        };

        ctrl_right: ctrl_right {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LEFT_CONTROL>,
                <&macro_tap>,
                <&kp RIGHT>,
                <&macro_release>,
                <&kp LEFT_CONTROL>;

            label = "CTRL_RIGHT";
        };

        ctrl_left: ctrl_left {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LEFT_CONTROL>,
                <&macro_tap>,
                <&kp LEFT>,
                <&macro_release>,
                <&kp LEFT_CONTROL>;

            label = "CTRL_LEFT";
        };

        ctrl_up: ctrl_up {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LEFT_CONTROL>,
                <&macro_tap>,
                <&kp UP>,
                <&macro_release>,
                <&kp LEFT_CONTROL>;

            label = "CTRL_UP";
        };

        ctrl_down: ctrl_down {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LEFT_CONTROL>,
                <&macro_tap>,
                <&kp DOWN>,
                <&macro_release>,
                <&kp LEFT_CONTROL>;

            label = "CTRL_DOWN";
        };

        ctrl_h: ctrl_h {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LEFT_CONTROL>,
                <&macro_tap>,
                <&kp H>,
                <&macro_release>,
                <&kp LEFT_CONTROL>;

            label = "CTRL_H";
        };

        ctrl_j: ctrl_j {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LEFT_CONTROL>,
                <&macro_tap>,
                <&kp J>,
                <&macro_release>,
                <&kp LEFT_CONTROL>;

            label = "CTRL_J";
        };

        ctrl_k: ctrl_k {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LEFT_CONTROL>,
                <&macro_tap>,
                <&kp K>,
                <&macro_release>,
                <&kp LEFT_CONTROL>;

            label = "CTRL_K";
        };

        ctrl_l: ctrl_l {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LEFT_CONTROL>,
                <&macro_tap>,
                <&kp L>,
                <&macro_release>,
                <&kp LEFT_CONTROL>;

            label = "CTRL_L";
        };

        ctrl_c: ctrl_c {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LEFT_CONTROL>,
                <&macro_tap>,
                <&kp C>,
                <&macro_release>,
                <&kp LEFT_CONTROL>;

            label = "CTRL_C";
        };

        ctrl_v: ctrl_v {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LEFT_CONTROL>,
                <&macro_tap>,
                <&kp V>,
                <&macro_release>,
                <&kp LEFT_CONTROL>;

            label = "CTRL_V";
        };

        ctrl_d: ctrl_d {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LEFT_CONTROL>,
                <&macro_tap>,
                <&kp D>,
                <&macro_release>,
                <&kp LEFT_CONTROL>;

            label = "CTRL_D";
        };

        option_right: option_right {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LEFT_ALT>,
                <&macro_tap>,
                <&kp RIGHT>,
                <&macro_release>,
                <&kp LEFT_ALT>;

            label = "OPTION_RIGHT";
        };

        option_left: option_left {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LEFT_ALT>,
                <&macro_tap>,
                <&kp LEFT>,
                <&macro_release>,
                <&kp LEFT_ALT>;

            label = "OPTION_LEFT";
        };

        option_enter: option_enter {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&macro_tap>, <&kp LA(ENTER)>;

            label = "OPTION_ENTER";
        };

        mac_copy: mac_copy {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&macro_tap>, <&kp LG(C)>;

            label = "MAC_COPY";
        };

        mac_paste: mac_paste {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&macro_tap>, <&kp LG(V)>;

            label = "MAC_PASTE";
        };

        mac_cut: mac_cut {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&macro_tap>, <&kp LG(X)>;

            label = "MAC_CUT";
        };
    };

    combos {
        compatible = "zmk,combos";

        switch_normal_bt {
            bindings = <&tog 1>;
            key-positions = <24 35>;
        };

        option_enter {
            bindings = <&option_enter>;
            key-positions = <24 37>;
        };

        toggle_mouse {
            bindings = <&tog 3>;
            key-positions = <38 39>;
        };

        minus {
            bindings = <&kp KP_MINUS>;
            key-positions = <18 19 20>;
            layers = <0 2>;
        };

        underscore {
            bindings = <&kp UNDERSCORE>;
            key-positions = <30 31 20>;
        };

        equal {
            bindings = <&kp KP_EQUAL>;
            key-positions = <6 7 20>;
        };

        plus {
            bindings = <&kp KP_PLUS>;
            key-positions = <19 20 30>;
        };

        scroll_up {
            bindings = <&msc SCRL_UP>;
            key-positions = <19 22>;
        };

        scroll_down {
            bindings = <&msc SCRL_DOWN>;
            key-positions = <31 34>;
        };

        scroll_left {
            bindings = <&msc SCRL_LEFT>;
            key-positions = <31 22>;
        };

        scroll_right {
            bindings = <&msc SCRL_RIGHT>;
            key-positions = <34 19>;
        };

        carat {
            bindings = <&kp CARET>;
            key-positions = <21 10 23>;
        };

        exclamation {
            bindings = <&kp EXCL>;
            key-positions = <2 3 16>;
        };

        dollar {
            bindings = <&kp DOLLAR>;
            key-positions = <24 25 14>;
        };

        percent {
            bindings = <&kp PERCENT>;
            key-positions = <14 1 0>;
        };

        asterisk {
            bindings = <&kp ASTERISK>;
            key-positions = <19 21 8>;
        };

        octothrope {
            bindings = <&kp HASH>;
            key-positions = <5 16 15>;
        };

        at {
            bindings = <&kp AT>;
            key-positions = <15 16 29>;
        };

        ampersand {
            bindings = <&kp AMPERSAND>;
            key-positions = <9 23 22>;
        };

        pipe {
            bindings = <&kp PIPE>;
            key-positions = <33 23 22>;
        };

        forward_slash {
            bindings = <&kp SLASH>;
            key-positions = <15 4 14>;
        };

        back_slash {
            bindings = <&kp BACKSLASH>;
            key-positions = <7 20 21>;
        };

        left_brace {
            bindings = <&kp LEFT_BRACE>;
            key-positions = <14 15 16>;
        };

        right_brace {
            bindings = <&kp RIGHT_BRACE>;
            key-positions = <21 20 19>;
        };

        left_bracket {
            bindings = <&kp LEFT_BRACKET>;
            key-positions = <16 27 26>;
        };

        right_bracket {
            bindings = <&kp RIGHT_BRACKET>;
            key-positions = <33 19 32>;
        };

        left_paren {
            bindings = <&kp LEFT_PARENTHESIS>;
            key-positions = <2 16 3>;
        };

        right_paren {
            bindings = <&kp RIGHT_PARENTHESIS>;
            key-positions = <9 19 8>;
        };

        grave {
            bindings = <&kp GRAVE>;
            key-positions = <20 33>;
        };

        tilde {
            bindings = <&kp TILDE>;
            key-positions = <13 2 15>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BKSP |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            bindings = <
&kp TAB           &kp Q  &kp W  &kp E       &kp R  &kp T        &kp Y      &kp U  &kp I      &kp O    &kp P     &kp BACKSPACE
&kp LEFT_COMMAND  &kp A  &kp S  &kp D       &kp F  &kp G        &kp H      &kp J  &kp K      &kp L    &kp SEMI  &kp SQT
&kp LSHFT         &kp Z  &kp X  &kp C       &kp V  &kp B        &kp N      &kp M  &kp COMMA  &kp DOT  &kp FSLH  &kp RIGHT_SHIFT
                                &kp ESCAPE  &mo 2  &kp ENTER    &kp SPACE  &mo 2  &language
            >;
        };

        bt_layer {
            bindings = <
&bt BT_CLR  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4    &trans  &trans  &trans  &trans  &trans  &trans
&none       &trans        &trans        &trans        &trans        &trans          &trans  &trans  &trans  &trans  &trans  &trans
&trans      &trans        &trans        &trans        &trans        &trans          &trans  &trans  &trans  &trans  &trans  &trans
                                        &trans        &trans        &trans          &trans  &trans  &trans
            >;
        };

        raise_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BKSP |
            // | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
            // | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&trans  &trans        &trans        &ctrl_c       &ctrl_v       &ctrl_d         &option_left  &ctrl_left  &ctrl_right  &option_right  &trans      &trans
&trans  &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &kp NUMBER_4  &kp NUMBER_5    &kp LEFT      &kp DOWN    &kp UP       &kp RIGHT      &ctrl_up    &kp C_VOLUME_UP
&trans  &kp NUMBER_6  &kp NUMBER_7  &kp NUMBER_8  &kp NUMBER_9  &kp NUMBER_0    &ctrl_h       &ctrl_j     &ctrl_k      &ctrl_l        &ctrl_down  &kp C_VOLUME_DOWN
                                    &trans        &trans        &trans          &trans        &trans      &trans
            >;
        };

        layer_4 {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans    &msc SCRL_LEFT  &msc SCRL_DOWN  &msc SCRL_UP  &msc SCRL_RIGHT  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &mmv MOVE_LEFT  &mmv MOVE_DOWN  &mmv MOVE_UP  &mmv MOVE_RIGHT  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &mac_paste      &mac_copy       &mac_cut      &trans           &trans  &trans
                        &trans  &trans  &trans    &mkp LCLK       &mkp RCLK       &mkp MCLK
            >;
        };
    };
};
