/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

/ {
    macros {
        dashboard: dashboard {
            compatible = "zmk,behavior-macro";
            label = "DASHBOARD";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LGUI>,
                <&macro_tap>,
                <&kp A>,
                <&macro_release>,
                <&kp LGUI>;
        };

        language: language {
            compatible = "zmk,behavior-macro";
            label = "LANGUAGE";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LGUI>,
                <&macro_tap>,
                <&kp SPACE>,
                <&macro_release>,
                <&kp LGUI>,
                <&macro_wait_time 100>,
                <&macro_tap>,
                <&kp INT_KATAKANAHIRAGANA>;
        };

        alt_tab: alt_tab {
            compatible = "zmk,behavior-macro";
            label = "ALT_TAB";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LEFT_ALT>,
                <&macro_tap>,
                <&kp TAB>,
                <&macro_release>,
                <&kp LALT>;
        };

        screenshot: screenshot {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&kp LEFT_COMMAND &kp LEFT_SHIFT>,
                <&macro_wait_time 5>,
                <&kp NUMBER_4>;

            label = "SCREENSHOT";
        };

        ctrl_right: ctrl_right {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LEFT_CONTROL>,
                <&macro_tap>,
                <&kp RIGHT>,
                <&macro_release>,
                <&kp LEFT_CONTROL>;

            label = "CTRL_RIGHT";
        };

        ctrl_left: ctrl_left {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LEFT_CONTROL>,
                <&macro_tap>,
                <&kp LEFT>,
                <&macro_release>,
                <&kp LEFT_CONTROL>;

            label = "CTRL_LEFT";
        };

        ctrl_up: ctrl_up {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LEFT_CONTROL>,
                <&macro_tap>,
                <&kp UP>,
                <&macro_release>,
                <&kp LEFT_CONTROL>;

            label = "CTRL_UP";
        };

        ctrl_down: ctrl_down {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LEFT_CONTROL>,
                <&macro_tap>,
                <&kp DOWN>,
                <&macro_release>,
                <&kp LEFT_CONTROL>;

            label = "CTRL_DOWN";
        };

        ctrl_h: ctrl_h {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LEFT_CONTROL>,
                <&macro_tap>,
                <&kp H>,
                <&macro_release>,
                <&kp LEFT_CONTROL>;

            label = "CTRL_H";
        };

        ctrl_j: ctrl_j {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LEFT_CONTROL>,
                <&macro_tap>,
                <&kp J>,
                <&macro_release>,
                <&kp LEFT_CONTROL>;

            label = "CTRL_J";
        };

        ctrl_k: ctrl_k {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LEFT_CONTROL>,
                <&macro_tap>,
                <&kp K>,
                <&macro_release>,
                <&kp LEFT_CONTROL>;

            label = "CTRL_K";
        };

        ctrl_l: ctrl_l {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LEFT_CONTROL>,
                <&macro_tap>,
                <&kp L>,
                <&macro_release>,
                <&kp LEFT_CONTROL>;

            label = "CTRL_L";
        };

        ctrl_c: ctrl_c {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LEFT_CONTROL>,
                <&macro_tap>,
                <&kp C>,
                <&macro_release>,
                <&kp LEFT_CONTROL>;

            label = "CTRL_C";
        };

        ctrl_v: ctrl_v {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LEFT_CONTROL>,
                <&macro_tap>,
                <&kp V>,
                <&macro_release>,
                <&kp LEFT_CONTROL>;

            label = "CTRL_V";
        };

        ctrl_d: ctrl_d {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LEFT_CONTROL>,
                <&macro_tap>,
                <&kp D>,
                <&macro_release>,
                <&kp LEFT_CONTROL>;

            label = "CTRL_D";
        };

        option_right: option_right {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LEFT_ALT>,
                <&macro_tap>,
                <&kp RIGHT>,
                <&macro_release>,
                <&kp LEFT_ALT>;

            label = "OPTION_RIGHT";
        };

        option_left: option_left {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LEFT_ALT>,
                <&macro_tap>,
                <&kp LEFT>,
                <&macro_release>,
                <&kp LEFT_ALT>;

            label = "OPTION_LEFT";
        };

        option_enter: option_enter {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&macro_tap>, <&kp LA(ENTER)>;

            label = "OPTION_ENTER";
        };
    };

    combos {
        compatible = "zmk,combos";

        switch_normal_bt {
            bindings = <&tog 1>;
            key-positions = <24 35>;
        };

        option_enter {
            bindings = <&option_enter>;
            key-positions = <24 37>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BKSP |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            bindings = <
&kp TAB           &kp Q  &kp W  &kp E       &kp R      &kp T    &kp Y  &kp U      &kp I      &kp O    &kp P     &kp BACKSPACE
&kp LEFT_COMMAND  &kp A  &kp S  &kp D       &kp F      &kp G    &kp H  &kp J      &kp K      &kp L    &kp SEMI  &kp SQT
&kp LSHFT         &kp Z  &kp X  &kp C       &kp V      &kp B    &kp N  &kp M      &kp COMMA  &kp DOT  &kp FSLH  &kp RIGHT_SHIFT
                                &kp ESCAPE  &kp ENTER  &mo 3    &mo 2  &kp SPACE  &language
            >;
        };

        bt_layer {
            bindings = <
&bt BT_CLR  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4    &trans  &trans  &trans  &trans  &trans  &trans
&none       &trans        &trans        &trans        &trans        &trans          &trans  &trans  &trans  &trans  &trans  &trans
&trans      &trans        &trans        &trans        &trans        &trans          &trans  &trans  &trans  &trans  &trans  &trans
                                        &trans        &trans        &trans          &trans  &trans  &trans
            >;
        };

        raise_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BKSP |
            // | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
            // | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&trans  &kp EXCL      &kp AT        &kp HASH      &kp DOLLAR    &kp PERCENT     &kp CARET  &kp AMPERSAND  &kp ASTERISK   &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &trans
&trans  &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &kp NUMBER_4  &kp NUMBER_5    &kp MINUS  &kp EQUAL      &kp BACKSLASH  &kp LBRC              &kp RBRC               &kp GRAVE
&trans  &kp NUMBER_6  &kp NUMBER_7  &kp NUMBER_8  &kp NUMBER_9  &kp NUMBER_0    &kp UNDER  &kp PLUS       &kp PIPE       &kp LEFT_BRACKET      &kp RIGHT_BRACKET      &kp TILDE
                                    &trans        &trans        &trans          &trans     &trans         &trans
            >;
        };

        lower_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BKSP |
            // | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
            // | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&alt_tab  &trans  &trans  &trans      &ctrl_up    &trans         &option_left  &trans    &trans   &option_right  &screenshot  &trans
&trans    &trans  &trans  &ctrl_left  &ctrl_down  &ctrl_right    &kp LEFT      &kp DOWN  &kp UP   &kp RIGHT      &trans       &kp C_VOLUME_UP
&trans    &trans  &trans  &ctrl_c     &ctrl_v     &ctrl_d        &ctrl_h       &ctrl_j   &ctrl_k  &ctrl_l        &trans       &kp C_VOLUME_DOWN
                          &trans      &trans      &trans         &trans        &trans    &trans
            >;
        };
    };
};
